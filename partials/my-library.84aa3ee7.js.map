{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BCEMC,EAAcC,SAASC,cAAc,kBACrCC,EAAUF,SAASC,cAAc,cACjCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,kBACrCI,EAAeL,SAASC,cAAc,cAE5CE,EAAWG,iBAAiB,SAKrB,WACL,GAAGH,EAAWI,UAAUC,SAAS,WAAY,OAC7CH,EAAaI,UAAU,GAEvBP,EAASK,UAAUG,OAAO,WAC1BP,EAAWI,UAAUG,OAAO,WAE5BC,IACAC,SAASC,QAAQD,SAASE,K,IAZ5BZ,EAASI,iBAAiB,SAgBnB,WACL,GAAGJ,EAASK,UAAUC,SAAS,WAAY,OAC3CH,EAAaI,UAAU,GAEvBP,EAASK,UAAUG,OAAO,WAC1BP,EAAWI,UAAUG,OAAO,WAE5BK,G,IAtBFX,EAAYE,iBAAiB,SA2BtB,WACL,GAAGH,EAAWI,UAAUC,SAAS,WAIjC,OAHEQ,aAAaC,WAAW,WACxBZ,EAAaI,UAAU,QACvBV,EAAYmB,MAAMC,QAAQ,QAE5BH,aAAaC,WAAW,SACxBZ,EAAaI,UAAU,GACvBV,EAAYmB,MAAMC,QAAQ,M,sDDtCtBC,EAAcpB,SAASC,cAAc,kBACrCoB,EAA2BrB,SAASC,cAAc,cAClDqB,EAAmBC,KAAKC,MAAMR,aAAaS,QAAQ,YACnDC,EAAiBH,KAAKC,MAAMR,aAAaS,QAAQ,UACjDE,EAAW,sCACXC,EAAU,mCAKhB,SAASC,EAAaC,GACpB,IAAMC,EAAOR,KAAKC,MAAMR,aAAaS,QAAQ,GAAYO,OAATF,KAChDG,QAAQC,IAAIH,IACRf,aAAaS,QAAQ,GAAYO,OAATF,KAAeC,EAAKI,OAAO,EACrDf,EAAYF,MAAMC,QAAQ,OAE1BC,EAAYF,MAAMC,QAAQ,M,UAIfiB,EAAgBC,G,OAAhBC,EAAeC,MAAAC,KAAAC,U,UAAfH,I,OAAAA,EAAfI,EAAA7C,EAAA,CAAA6C,EAAAC,GAAAC,MAAA,SAAAC,EAA+BR,G,IAGnBS,E,mFADR,EAAAC,EAAAC,iB,SACuBC,EAAAC,QAAMC,IAC3B,GAAcnB,OAAXL,GAA2BK,OAAhBK,EAAK,aAAmBL,OAARJ,EAAQ,oB,cADlCkB,EAAMM,EAAAC,KAAJP,MAGR,EAAAC,EAAAO,iB,kBACOR,G,gCAEPb,QAAQC,IAAGkB,EAAAG,I,0DATehB,MAAAC,KAAAC,U,UAeR9B,I,OAAA6C,EAAWjB,MAAAC,KAAAC,U,UAAXe,I,OAAAA,EAAfd,EAAA7C,EAAA,CAAA6C,EAAAC,GAAAC,MAAA,SAAAC,I,IAIAY,EAAAC,EAAAC,EAAAC,EAAAC,EAAMC,EACLC,EACEC,EACFC,EACEC,EAEFC,E,kEATN9C,EAAyBZ,UAAY,GACrCoB,EAAa,WAER4B,GAAY,EAAZC,GAAY,EAAZC,OAAYS,E,SAAZR,EAAgBtC,EAAgB+C,OAAAC,Y,UAAhCb,GAAAI,EAAAD,EAAYW,QAAAC,KAAA,C,uBAANV,EAAND,EAAYY,MACXV,EAAS,G,UACa3B,EAAgB0B,G,QAApCE,EAAWZ,EAAAC,KACbY,EAAUS,OAAOC,SAASX,EAAYY,cAAgBZ,EAAYa,gBAChEX,EAAa,kCAA0DlC,OAAxBgC,EAAYc,aAC7C,2GAChBX,EAAc,GAElBH,EAAYe,OAAOC,SAAQ,SAAAC,GACzBd,EAAYe,KAAKD,EAAQE,K,IAG3BpB,GAAU,qDAMU/B,OALCgC,EAAYoB,GAAG,2KAOXpD,OAFLgC,EAAYc,YAAcZ,EAb1B,2GAcD,kCAKwBlC,OAJlBgC,EAAYqB,MAAM,uKAMGrD,OAFHgC,EAAYqB,MAAM,sFAEarD,OAA5BmC,EAAYmB,KAAK,MAAM,OAChBtD,OADqBiC,EAAQ,oEACOjC,OAApCgC,EAAYuB,aAAaC,QAAQ,GAAG,gHAMzFnE,EAAyBoE,mBAAmB,YAAa1B,G,QAjCtDN,GAAY,E,yEAAZC,GAAY,EAAZC,EAAYP,EAAAG,G,4BAAZE,GAAY,MAAZG,EAAY8B,QAAZ9B,EAAY8B,S,sBAAZhC,EAAY,C,sBAAZC,E,qIAJ0BpB,MAAAC,KAAAC,U,UAyCX1B,I,OAAA4E,EAAWpD,MAAAC,KAAAC,U,UAAXkD,I,OAAAA,EAAfjD,EAAA7C,EAAA,CAAA6C,EAAAC,GAAAC,MAAA,SAAAC,I,IAIAY,EAAAC,EAAAC,EAAAC,EAAAC,EAAMC,EACLC,EACEC,EACFC,EACEC,EAEFC,E,kEATN9C,EAAyBZ,UAAY,GACrCoB,EAAa,SAER4B,GAAY,EAAZC,GAAY,EAAZC,OAAYS,E,SAAZR,EAAgBlC,EAAc2C,OAAAC,Y,UAA9Bb,GAAAI,EAAAD,EAAYW,QAAAC,KAAA,C,uBAANV,EAAND,EAAYY,MACXV,EAAS,G,UACa3B,EAAgB0B,G,QAApCE,EAAWZ,EAAAC,KACbY,EAAUS,OAAOC,SAASX,EAAYY,cAAgBZ,EAAYa,gBAChEX,EAAa,kCAA0DlC,OAAxBgC,EAAYc,aAC7C,2GAChBX,EAAc,GAElBH,EAAYe,OAAOC,SAAQ,SAAAC,GACzBd,EAAYe,KAAKD,EAAQE,K,IAG3BpB,GAAU,mDAKc/B,OAJLgC,EAAYoB,GAAG,mKAKXpD,OADCgC,EAAYc,YAAcZ,EAZ9B,2GAYsD,gCAKjClC,OAJlBgC,EAAYqB,MAAM,+JAMGrD,OAFHgC,EAAYqB,MAAM,kFAEarD,OAA5BmC,EAAYmB,KAAK,MAAM,OAChBtD,OADqBiC,EAAQ,kEACOjC,OAApCgC,EAAYuB,aAAaC,QAAQ,GAAG,wGAMvFnE,EAAyBoE,mBAAmB,YAAa1B,G,QA/BtDN,GAAY,E,yEAAZC,GAAY,EAAZC,EAAYP,EAAAG,G,4BAAZE,GAAY,MAAZG,EAAY8B,QAAZ9B,EAAY8B,S,sBAAZhC,EAAY,C,sBAAZC,E,qIAJ0BpB,MAAAC,KAAAC,U,EApEjC,EAAAM,EAAAO,iBAyBA3C,IAmFA,IAAMiF,EAAS5F,SAASC,cAAc,eAGpC4F,OAAOvF,iBAAiB,UAAU,WAC5BuF,OAAOC,QAAU,IACnBF,EAAO1E,MAAMC,QAAU,QAEvByE,EAAO1E,MAAMC,QAAU,M,IAM3ByE,EAAOtF,iBAAiB,SAAS,WAC/BuF,OAAOE,OAAO,CACZC,IAAK,EACLC,KAAM,EACNC,SAAU,U","sources":["src/js/my-library.js","src/js/buttons-my-library.js"],"sourcesContent":["import axios from 'axios';\nimport {onClickWatchedBtn, onClickQueueBtn, onClickClearAll } from './buttons-my-library';\nimport { genres } from './genres';\nimport { clickOnFilmCard } from './film-modal';\nimport { getVideoInfo } from './trailer';\nimport { showPreloader, hidePreloader } from './loader';\n\nconst wraperMyLib = document.querySelector('.empty-wrapper')\nconst containerListWatchedCard = document.querySelector('.film-list');\nconst dataWatchedCards = JSON.parse(localStorage.getItem('wathced'));\nconst dataQueueCards = JSON.parse(localStorage.getItem('queue'));\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst API_KEY = '352708f90836dd2b75b209ae082e91df';\n\n// const queueButton = document.getElementById('queue');\nhidePreloader();\n\nfunction statusWraper(nameList){\n  const test = JSON.parse(localStorage.getItem(`${nameList}`))\n  console.log(test)\n  if(!localStorage.getItem(`${nameList}`) || test.length<1){\n    wraperMyLib.style.display='flex'\n  }else{\n    wraperMyLib.style.display='none'\n  }\n}\n\nasync function getWatchedFilms(page) {\n  try {\n    showPreloader();\n    const { data } = await axios.get(\n      `${BASE_URL}${page}?api_key=${API_KEY}&language=en-US`\n    );\n    hidePreloader();\n    return data;\n  } catch (error) {\n    console.log(error);\n  } \n}\n\nonCardWatch();\n\nexport async function onCardWatch() {\n  containerListWatchedCard.innerHTML = '';\n  statusWraper('wathced');\n  \n  for (const idFilm of dataWatchedCards) {\n    let markup = '';\n    const oneFilmCard = await getWatchedFilms(idFilm);\n    let release = Number.parseInt(oneFilmCard.release_date || oneFilmCard.first_air_date);\n    const mainPoster = `https://image.tmdb.org/t/p/w300${oneFilmCard.poster_path}`;\n    const posterFake = `https://shop-cdn1.vigbo.tech/shops/48947/products/18863233/images/2-be392e7cfe9a0fa843b29c1e22be8909.jpg`;\n    let genreMarkup = [];\n\n    oneFilmCard.genres.forEach(element => {\n      genreMarkup.push(element.name)\n    });\n\n    markup += ` <li class =\"film-item\">\n                <a id='${oneFilmCard.id}' class=\"film-card\" href=\"#\">\n                  <div class='thumb'>\n                  <img\n                      class = 'poster'\n                      src= \"${\n                        oneFilmCard.poster_path ? mainPoster : posterFake\n                      }\"\n                      alt=\"${oneFilmCard.title}\"\n                      loading=\"lazy\"\n                    /></div>\n                    <div class='film-data'>\n                      <h2 class=\"title-film\">${oneFilmCard.title}</h2>\n                      <p>\n                        <span class='info-film'>${genreMarkup.join(', ')} | ${release}</span>\n                        <span class =\"rating\">IMDB:<br>${oneFilmCard.vote_average.toFixed(1)}</span>\n                      </p>\n                    </div>\n                  </a>\n              </li>`;\n\n    containerListWatchedCard.insertAdjacentHTML('beforeend', markup);\n  }\n}\n\nexport async function onCardQueue() {\n  containerListWatchedCard.innerHTML = '';\n  statusWraper('queue');\n  \n  for (const idFilm of dataQueueCards) {\n    let markup = '';\n    const oneFilmCard = await getWatchedFilms(idFilm);\n    let release = Number.parseInt(oneFilmCard.release_date || oneFilmCard.first_air_date);\n    const mainPoster = `https://image.tmdb.org/t/p/w300${oneFilmCard.poster_path}`;\n    const posterFake = `https://shop-cdn1.vigbo.tech/shops/48947/products/18863233/images/2-be392e7cfe9a0fa843b29c1e22be8909.jpg`;\n    let genreMarkup = [];\n\n    oneFilmCard.genres.forEach(element => {\n      genreMarkup.push(element.name)\n    });\n    \n    markup += ` <li class =\"film-item\">\n              <a id='${oneFilmCard.id}' class=\"film-card\" href=\"#\">\n                <div class='thumb'>\n                <img\n                    class = 'poster'\n                    src= \"${oneFilmCard.poster_path ? mainPoster : posterFake}\"\n                    alt=\"${oneFilmCard.title}\"\n                    loading=\"lazy\"\n                  /></div>\n                  <div class='film-data'>\n                    <h2 class=\"title-film\">${oneFilmCard.title}</h2>\n                    <p>\n                      <span class='info-film'>${genreMarkup.join(', ')} | ${release}</span>\n                      <span class =\"rating\">IMDB:<br>${oneFilmCard.vote_average.toFixed(1)}</span>\n                    </p>\n                  </div>\n                </a>\n            </li>`;\n\n    containerListWatchedCard.insertAdjacentHTML('beforeend', markup);\n  }\n}\n\n// Scroll to top\nconst button = document.querySelector('.btn-scroll');\n\nconst displayButton = () => {\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > 100) {\n      button.style.display = 'block';\n    } else {\n      button.style.display = 'none';\n    }\n  });\n};\n\nconst scrollToTop = () => {\n  button.addEventListener('click', () => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  });\n};\n\ndisplayButton();\nscrollToTop();\n\n\n\n","import { onCardWatch, onCardQueue } from \"./my-library\";\n\nconst wraperMyLib = document.querySelector('.empty-wrapper')\nconst queueBtn= document.querySelector('.secondary')\nconst watchedBtn= document.querySelector('.lib-btn.current')\nconst btnClearAll = document.querySelector('.btn-clear-all')\nconst mylibWrapper = document.querySelector('.film-list')\n\nwatchedBtn.addEventListener('click', onClickWatchedBtn)\nqueueBtn.addEventListener('click', onClickQueueBtn)\nbtnClearAll.addEventListener('click', onClickClearAll)\n\n\nexport function onClickWatchedBtn(){\n  if(watchedBtn.classList.contains('current')){return}\n  mylibWrapper.innerHTML=''\n  \n  queueBtn.classList.toggle('current')\n  watchedBtn.classList.toggle('current')\n  \n  onCardWatch()\n  location.replace(location.href)\n}\n\n\nexport function onClickQueueBtn(){\n  if(queueBtn.classList.contains('current')){return}\n  mylibWrapper.innerHTML=''\n\n  queueBtn.classList.toggle('current')\n  watchedBtn.classList.toggle('current')\n\n  onCardQueue()\n  // location.replace(location.href)\n}\n\n\nexport function onClickClearAll() {\n  if(watchedBtn.classList.contains('current')){\n    localStorage.removeItem('wathced')\n    mylibWrapper.innerHTML=''\n    wraperMyLib.style.display='flex'\n  return}\n  localStorage.removeItem('queue')\n  mylibWrapper.innerHTML=''\n  wraperMyLib.style.display='flex'\n  \n}"],"names":["$bpxeT","parcelRequire","$7d854cd8b40ceb9e$var$wraperMyLib","document","querySelector","$7d854cd8b40ceb9e$var$queueBtn","$7d854cd8b40ceb9e$var$watchedBtn","$7d854cd8b40ceb9e$var$btnClearAll","$7d854cd8b40ceb9e$var$mylibWrapper","addEventListener","classList","contains","innerHTML","toggle","$bb2af86579234925$export$b99bead8ac476cc4","location","replace","href","$bb2af86579234925$export$2af9531601bc3395","localStorage","removeItem","style","display","$bb2af86579234925$var$wraperMyLib","$bb2af86579234925$var$containerListWatchedCard","$bb2af86579234925$var$dataWatchedCards","JSON","parse","getItem","$bb2af86579234925$var$dataQueueCards","$bb2af86579234925$var$BASE_URL","$bb2af86579234925$var$API_KEY","$bb2af86579234925$var$statusWraper","nameList","test","concat","console","log","length","$bb2af86579234925$var$getWatchedFilms","page","$bb2af86579234925$var$_getWatchedFilms","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","$kvC6y","showPreloader","$dIxxU","default","get","_ctx","sent","hidePreloader","t0","$bb2af86579234925$var$_onCardWatch","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","idFilm","markup","oneFilmCard","release","mainPoster","genreMarkup","undefined","Symbol","iterator","next","done","value","Number","parseInt","release_date","first_air_date","poster_path","genres","forEach","element","push","name","id","title","join","vote_average","toFixed","insertAdjacentHTML","return","$bb2af86579234925$var$_onCardQueue","$bb2af86579234925$var$button","window","scrollY","scroll","top","left","behavior"],"version":3,"file":"my-library.84aa3ee7.js.map"}