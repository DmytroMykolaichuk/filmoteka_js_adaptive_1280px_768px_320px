{"mappings":"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","sources":["src/js/my-library.js","src/js/buttons-my-library.js"],"sourcesContent":["import { getWatchedFilms } from './api';\nimport { click, addDarkClassToHTML } from './theme';\nimport { gsap } from 'gsap';\nimport {\n  funcAnimeLogo,\n  funcAnimeHeart,\n  funcAnimeHaederLib,\n} from './SVG-animation';\nimport {\n  onClickWatchedBtn,\n  onClickQueueBtn,\n  onClickClearAll,\n} from './buttons-my-library';\nimport { stuffOnFilmCard } from './film-modal';\nimport { getVideoInfo, playVideoTrailer } from './trailer';\nimport { showPreloader, hidePreloader } from './loader';\nimport { openTeamModal } from './team-modal';\nimport { refs } from './refs';\n\nconst dataWatchedCards = JSON.parse(localStorage.getItem('watched')) || [];\nconst dataQueueCards = JSON.parse(localStorage.getItem('queue')) || [];\n\nhidePreloader();\n\nexport function statusWraper(nameList) {\n  const test = JSON.parse(localStorage.getItem(`${nameList}`)) || [];\n\n  if (!localStorage.getItem(`${nameList}`) || test.length < 1) {\n    if (localStorage.getItem('theme') === 'dark-theme') {\n      refs.darkWrapper.style.display = 'flex';\n      refs.wraperMyLib.style.display = 'none';\n    } else {\n      refs.darkWrapper.style.display = 'none';\n      refs.wraperMyLib.style.display = 'flex';\n    }\n  } else {\n    if (localStorage.getItem('theme') === 'dark-theme') {\n      refs.darkWrapper.style.display = 'none';\n    } else {\n      refs.wraperMyLib.style.display = 'none';\n    }\n  }\n}\n\nonCardWatch();\n\nexport async function onCardWatch() {\n  showPreloader();\n  refs.gallery.innerHTML = '';\n  statusWraper('watched');\n  let markup = '';\n  for (const idFilm of dataWatchedCards) {\n    const oneFilmCard = await getWatchedFilms(idFilm);\n    let release = Number.parseInt(\n      oneFilmCard.release_date || oneFilmCard.first_air_date\n    );\n    const mainPoster = `https://image.tmdb.org/t/p/w300${oneFilmCard.poster_path}`;\n    const posterFake = `https://sd.keepcalms.com/i-w600/keep-calm-poster-not-found.jpg`;\n    let genreMarkup = [];\n\n    oneFilmCard.genres.forEach(element => {\n      genreMarkup.push(element.name);\n    });\n\n    markup += ` <li class =\"film-item\">\n                <a id='${oneFilmCard.id}' class=\"film-card\" href=\"#\">\n                  <div class='thumb'>\n                  <img\n                      class = 'poster'\n                      src= \"${\n                        oneFilmCard.poster_path ? mainPoster : posterFake\n                      }\"\n                      alt=\"${oneFilmCard.title}\"\n                      loading=\"lazy\"\n                    /></div>\n                    <div class='film-data'>\n                      <h2 class=\"title-film\">${oneFilmCard.title}</h2>\n                      <p class=\"text\">\n                        <span class='info-film'>${genreMarkup.join(\n                          ', '\n                        )} | ${release}</span>\n                        <span class =\"rating\">IMDB:<br>${oneFilmCard.vote_average.toFixed(\n                          1\n                        )}</span>\n                      </p>\n                    </div>\n                  </a>\n              </li>`;\n  }\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n  hidePreloader();\n}\n\nexport async function onCardQueue() {\n  showPreloader();\n  refs.gallery.innerHTML = '';\n  statusWraper('queue');\n  let markup = '';\n  for (const idFilm of dataQueueCards) {\n    const oneFilmCard = await getWatchedFilms(idFilm);\n    let release = Number.parseInt(\n      oneFilmCard.release_date || oneFilmCard.first_air_date\n    );\n    const mainPoster = `https://image.tmdb.org/t/p/w300${oneFilmCard.poster_path}`;\n    const posterFake = `https://sd.keepcalms.com/i-w600/keep-calm-poster-not-found.jpg`;\n    let genreMarkup = [];\n\n    oneFilmCard.genres.forEach(element => {\n      genreMarkup.push(element.name);\n    });\n\n    markup += ` <li class =\"film-item\">\n              <a id='${oneFilmCard.id}' class=\"film-card\" href=\"#\">\n                <div class='thumb'>\n                <img\n                    class = 'poster'\n                    src= \"${oneFilmCard.poster_path ? mainPoster : posterFake}\"\n                    alt=\"${oneFilmCard.title}\"\n                    loading=\"lazy\"\n                  /></div>\n                  <div class='film-data'>\n                    <h2 class=\"title-film\">${oneFilmCard.title}</h2>\n                    <p class=\"text\">\n                      <span class='info-film'>${genreMarkup.join(\n                        ', '\n                      )} | ${release}</span>\n                      <span class =\"rating\">IMDB:<br>${oneFilmCard.vote_average.toFixed(\n                        1\n                      )}</span>\n                    </p>\n                  </div>\n                </a>\n            </li>`;\n  }\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n  hidePreloader();\n}\n\nconst displayButton = () => {\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > 100) {\n      refs.button.style.display = 'block';\n    } else {\n      refs.button.style.display = 'none';\n    }\n  });\n};\n\nconst scrollToTop = () => {\n  refs.button.addEventListener('click', () => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  });\n};\n\ndisplayButton();\nscrollToTop();\naddDarkClassToHTML();\n","import { onCardWatch, onCardQueue } from './my-library';\nimport { refs } from './refs';\n\nrefs.watchedBtn.addEventListener('click', onClickWatchedBtn);\nrefs.queueBtn.addEventListener('click', onClickQueueBtn);\nrefs.btnClearAll.addEventListener('click', onClickClearAll);\n\nexport function onClickWatchedBtn() {\n  if (refs.watchedBtn.classList.contains('current')) {\n    return;\n  }\n  refs.gallery.innerHTML = '';\n\n  refs.queueBtn.classList.toggle('current');\n  refs.watchedBtn.classList.toggle('current');\n\n  onCardWatch();\n  location.replace(location.href);\n}\n\nexport function onClickQueueBtn() {\n  if (refs.queueBtn.classList.contains('current')) {\n    return;\n  }\n  refs.gallery.innerHTML = '';\n\n  refs.queueBtn.classList.toggle('current');\n  refs.watchedBtn.classList.toggle('current');\n\n  onCardQueue();\n}\n\nexport function onClickClearAll() {\n  if (refs.watchedBtn.classList.contains('current')) {\n    localStorage.setItem('watched', JSON.stringify([]));\n    refs.gallery.innerHTML = '';\n    if (localStorage.getItem('theme') === 'dark-theme') {\n      refs.darkWrapper.style.display = 'flex';\n    } else {\n      refs.wraperMyLib.style.display = 'flex';\n    }\n    return;\n  }\n  localStorage.setItem('queue', JSON.stringify([]));\n  refs.gallery.innerHTML = '';\n  if (localStorage.getItem('theme') === 'dark-theme') {\n    refs.darkWrapper.style.display = 'flex';\n  } else {\n    refs.wraperMyLib.style.display = 'flex';\n  }\n}\n"],"names":["$bpxeT","parcelRequire","refs","watchedBtn","addEventListener","$4Nugj","classList","contains","gallery","innerHTML","queueBtn","toggle","$bb2af86579234925$export$b99bead8ac476cc4","location","replace","href","$bb2af86579234925$export$2af9531601bc3395","btnClearAll","localStorage","setItem","JSON","stringify","getItem","darkWrapper","style","display","wraperMyLib","$bb2af86579234925$var$dataWatchedCards","parse","$bb2af86579234925$var$dataQueueCards","$bb2af86579234925$export$428345ef4a1e46a9","nameList","test","concat","length","$bb2af86579234925$var$_onCardWatch","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","markup","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","idFilm","oneFilmCard","release","mainPoster","genreMarkup","$kvC6y","showPreloader","undefined","Symbol","iterator","next","done","value","$b7ONl","getWatchedFilms","_ctx","sent","Number","parseInt","release_date","first_air_date","poster_path","genres","forEach","element","push","name","id","title","join","vote_average","toFixed","t0","return","insertAdjacentHTML","hidePreloader","$bb2af86579234925$var$_onCardQueue","window","scrollY","button","scroll","top","left","behavior","$9VC5X","addDarkClassToHTML"],"version":3,"file":"my-library.b2d7ba73.js.map"}