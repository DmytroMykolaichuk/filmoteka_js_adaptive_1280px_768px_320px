{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCEA,MAAMC,EAAUC,SAASC,cAAc,cACjCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,kBACrCG,EAAeJ,SAASC,cAAc,kBAE5CF,EAASM,iBAAiB,SACnB,WACL,GAAGN,EAASO,UAAUC,SAAS,WAAY,OAC3CH,EAAaI,UAAU,GACvBT,EAASO,UAAUG,OAAO,WAC1BP,EAAWI,UAAUG,OAAO,U,IAE9BP,EAAWG,iBAAiB,SACrB,WACL,GAAGH,EAAWI,UAAUC,SAAS,WAAY,OAC7CH,EAAaI,UAAU,GACvBT,EAASO,UAAUG,OAAO,WAC1BP,EAAWI,UAAUG,OAAO,WAC5BC,G,IAGFP,EAAYE,iBAAiB,SACtB,WACL,GAAGH,EAAWI,UAAUC,SAAS,WAGjC,OAFEI,aAAaC,WAAW,gBACxBR,EAAaI,UAAU,IAEzBG,aAAaC,WAAW,Q,sDDjB1B,MAAMC,EAA2Bb,SAASC,cAAc,cAClDa,EAAmBC,KAAKC,MAAML,aAAaM,QAAQ,YAKnDC,GAJiBH,KAAKC,MAAML,aAAaM,QAAQ,UAInCjB,SAASmB,eAAe,UAIrCC,eAAeV,IACpBG,EAAyBL,UAAY,GACrC,IAAK,MAAMa,KAAUP,EAAkB,CACrC,MAAMQ,QAAoBC,EAAgBF,GAE1C,IAAIG,EAAUC,OAAOC,SAASJ,EAAYK,cAAgBL,EAAYM,gBACtE,MAAMC,EAAa,kCAAkCP,EAAYQ,cAC3DC,EAAa,2GACnB,IAAIC,EAAc,GAElBC,EAAAC,OAAOC,SAAQC,IACTd,EAAYY,OAAOG,SAASD,EAAME,KACpCN,EAAYO,KAAKH,EAAMI,KAAK,IAIhC,IAAIC,EAAS,GACbA,GAAU,oDACWnB,EAAYgB,uKAKbhB,EAAYQ,YAAcD,EAAaE,kCAElCT,EAAYoB,yKAIMpB,EAAYoB,2FAERV,EAAYW,KACpC,WACKnB,oEACyBF,EAAYsB,aAAaC,QACxD,iHAMtBhC,EAAyBiC,mBAAmB,YAAaL,E,EAsD7DrB,eAAeG,EAAgBwB,GAC7B,IACE,MAAMC,KAAEA,SAAenD,EAAAoD,QAAMC,IAC3B,sCAAcH,6DAEhB,OAAOC,C,CACP,MAAOG,GACPC,QAAQC,IAAIF,E,EAzGhBjC,EAAYb,iBAAiB,SAAS,SA+CtCK,IAEAQ,EAAYb,iBAAiB,SAAS,K,IAgDtCiD","sources":["src/js/my-library.js","src/js/buttons-my-library.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  onClickWatchedBtn,\n  onClickQueueBtn,\n  onClickClearAll,\n} from './buttons-my-library';\nimport { genres } from './genres';\nimport { clickOnFilmCard } from './film-modal';\nimport { getVideoInfo } from './trailer';\nimport { showPreloader, hidePreloader } from './loader';\n// import { showPreloader, hidePreloader } from './loader';\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nconst containerListWatchedCard = document.querySelector('.film-list');\nconst dataWatchedCards = JSON.parse(localStorage.getItem('wathced'));\nconst dataQueueCards = JSON.parse(localStorage.getItem('queue'));\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst API_KEY = '352708f90836dd2b75b209ae082e91df';\n\nconst queueButton = document.getElementById('queue');\nqueueButton.addEventListener('click', () => {});\n\n\nexport async function onCardWatch() {\n  containerListWatchedCard.innerHTML = '';\n  for (const idFilm of dataWatchedCards) {\n    const oneFilmCard = await getWatchedFilms(idFilm);\n\n    let release = Number.parseInt(oneFilmCard.release_date || oneFilmCard.first_air_date);\n    const mainPoster = `https://image.tmdb.org/t/p/w300${oneFilmCard.poster_path}`;\n    const posterFake = `https://shop-cdn1.vigbo.tech/shops/48947/products/18863233/images/2-be392e7cfe9a0fa843b29c1e22be8909.jpg`;\n    let genreMarkup = [];\n\n    genres.forEach(genre => {\n      if (oneFilmCard.genres.includes(genre.id)) {\n        genreMarkup.push(genre.name);\n      }\n    });\n\n    let markup = '';\n    markup += ` <li class =\"film-item\">\n                <a id='${oneFilmCard.id}' class=\"film-card\" href=\"#\">\n                  <div class='thumb'>\n                  <img\n                      class = 'poster'\n                      src= \"${\n                        oneFilmCard.poster_path ? mainPoster : posterFake\n                      }\"\n                      alt=\"${oneFilmCard.title}\"\n                      loading=\"lazy\"\n                    /></div>\n                    <div class='film-data'>\n                      <h2 class=\"title-film\">${oneFilmCard.title}</h2>\n                      <p>\n                         <span class='info-film'>${genreMarkup.join(\n                           ', '\n                         )} | ${release}</span>\n                        <span class =\"rating\">IMDB:<br>${oneFilmCard.vote_average.toFixed(\n                          1\n                        )}</span>\n                      </p>\n                    </div>\n                  </a>\n              </li>`;\n    containerListWatchedCard.insertAdjacentHTML('beforeend', markup);\n  }\n}\nonCardWatch();\n//////////addEventListener//////\nqueueButton.addEventListener('click', () => {\n  async function onCardQueue() {\n    containerListWatchedCard.innerHTML = '';\n    for (const idFilm of dataQueueCards) {\n      const oneFilmCard = await getWatchedFilms(idFilm);\n      let release = Number.parseInt(\n        oneFilmCard.release_date || oneFilmCard.first_air_date\n      );\n      const mainPoster = `https://image.tmdb.org/t/p/w300${oneFilmCard.poster_path}`;\n      const posterFake = `https://shop-cdn1.vigbo.tech/shops/48947/products/18863233/images/2-be392e7cfe9a0fa843b29c1e22be8909.jpg`;\n      let genreMarkup = [];\n      genres.forEach(genre => {\n        if (oneFilmCard.genres.includes(genre.id)) {\n          genreMarkup.push(genre.name);\n        }\n      });\n      let markup = '';\n      markup += ` <li class =\"film-item\">\n                <a id='${oneFilmCard.id}' class=\"film-card\" href=\"#\">\n                  <div class='thumb'>\n                  <img\n                      class = 'poster'\n                      src= \"${\n                        oneFilmCard.poster_path ? mainPoster : posterFake\n                      }\"\n                      alt=\"${oneFilmCard.title}\"\n                      loading=\"lazy\"\n                    /></div>\n                    <div class='film-data'>\n                      <h2 class=\"title-film\">${oneFilmCard.title}</h2>\n                      <p>\n                         <span class='info-film'>${genreMarkup.join(\n                           ', '\n                         )} | ${release}</span>\n                        <span class =\"rating\">IMDB:<br>${oneFilmCard.vote_average.toFixed(\n                          1\n                        )}</span>\n                      </p>\n                    </div>\n                  </a>\n              </li>`;\n      console.log(markup);\n      console.log(oneFilmCard);\n      containerListWatchedCard.insertAdjacentHTML('beforeend', markup);\n    }\n  }\n});\n\nonCardQueue();\nasync function getWatchedFilms(page) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}${page}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { onCardWatch } from \"./my-library\"\n\nconst queueBtn= document.querySelector('.secondary')\nconst watchedBtn= document.querySelector('.lib-btn.current')\nconst btnClearAll = document.querySelector('.btn-clear-all')\nconst mylibWrapper = document.querySelector('.mylib-wrapper')\n\nqueueBtn.addEventListener('click', onClickQueueBtn)\nexport function onClickQueueBtn(){\n  if(queueBtn.classList.contains('current')){return}\n  mylibWrapper.innerHTML=''\n  queueBtn.classList.toggle('current')\n  watchedBtn.classList.toggle('current')\n}\nwatchedBtn.addEventListener('click', onClickWatchedBtn)\nexport function onClickWatchedBtn(){\n  if(watchedBtn.classList.contains('current')){return}\n  mylibWrapper.innerHTML=''\n  queueBtn.classList.toggle('current')\n  watchedBtn.classList.toggle('current')\n  onCardWatch()\n}\n\nbtnClearAll.addEventListener('click', onClickClearAll)\nexport function onClickClearAll(){\n  if(watchedBtn.classList.contains('current')){\n    localStorage.removeItem('wathced')\n    mylibWrapper.innerHTML=''\n  return}\n  localStorage.removeItem('queue')\n}"],"names":["$2shzp","parcelRequire","$7744079a8aeaa033$var$queueBtn","document","querySelector","$7744079a8aeaa033$var$watchedBtn","$7744079a8aeaa033$var$btnClearAll","$7744079a8aeaa033$var$mylibWrapper","addEventListener","classList","contains","innerHTML","toggle","$085d2f9f3e302aeb$export$b99bead8ac476cc4","localStorage","removeItem","$085d2f9f3e302aeb$var$containerListWatchedCard","$085d2f9f3e302aeb$var$dataWatchedCards","JSON","parse","getItem","$085d2f9f3e302aeb$var$queueButton","getElementById","async","idFilm","oneFilmCard","$085d2f9f3e302aeb$var$getWatchedFilms","release","Number","parseInt","release_date","first_air_date","mainPoster","poster_path","posterFake","genreMarkup","$ezyJp","genres","forEach","genre","includes","id","push","name","markup","title","join","vote_average","toFixed","insertAdjacentHTML","page","data","default","get","error","console","log","onCardQueue"],"version":3,"file":"my-library.a55ffa0f.js.map"}