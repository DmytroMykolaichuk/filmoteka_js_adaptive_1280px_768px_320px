{"mappings":"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","sources":["src/js/my-library.js","src/js/buttons-my-library.js"],"sourcesContent":["import axios from 'axios';\nimport {onClickWatchedBtn, onClickQueueBtn, onClickClearAll } from './buttons-my-library';\nimport { genres } from './genres';\nimport { clickOnFilmCard } from './film-modal';\nimport { getVideoInfo } from './trailer';\nimport { showPreloader, hidePreloader } from './loader';\n\nconst wraperMyLib = document.querySelector('.empty-wrapper')\nconst containerListWatchedCard = document.querySelector('.film-list');\nconst dataWatchedCards = JSON.parse(localStorage.getItem('wathced'));\nconst dataQueueCards = JSON.parse(localStorage.getItem('queue'));\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst API_KEY = '352708f90836dd2b75b209ae082e91df';\n\n// const queueButton = document.getElementById('queue');\n\nfunction wraper(){\n  const test = JSON.parse(localStorage.getItem('wathced'))\n  console.log(test)\n  if( localStorage.getItem('wathced') || test[0]){\n    wraperMyLib.style.display='none'\n    onCardWatch();\n    return\n  }\n  wraperMyLib.style.display='flex'\n}\nwraper()\n\nasync function getWatchedFilms(page) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}${page}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function onCardWatch() {\n  containerListWatchedCard.innerHTML = '';\n  let markup = '';\n  for (const idFilm of dataWatchedCards) {\n    const oneFilmCard = await getWatchedFilms(idFilm);\n    let release = Number.parseInt(oneFilmCard.release_date || oneFilmCard.first_air_date);\n    const mainPoster = `https://image.tmdb.org/t/p/w300${oneFilmCard.poster_path}`;\n    const posterFake = `https://shop-cdn1.vigbo.tech/shops/48947/products/18863233/images/2-be392e7cfe9a0fa843b29c1e22be8909.jpg`;\n    let genreMarkup = [];\n\n    oneFilmCard.genres.forEach(element => {\n      genreMarkup.push(element.name)\n    });\n\n    markup += ` <li class =\"film-item\">\n                <a id='${oneFilmCard.id}' class=\"film-card\" href=\"#\">\n                  <div class='thumb'>\n                  <img\n                      class = 'poster'\n                      src= \"${\n                        oneFilmCard.poster_path ? mainPoster : posterFake\n                      }\"\n                      alt=\"${oneFilmCard.title}\"\n                      loading=\"lazy\"\n                    /></div>\n                    <div class='film-data'>\n                      <h2 class=\"title-film\">${oneFilmCard.title}</h2>\n                      <p>\n                        <span class='info-film'>${genreMarkup.join(', ')} | ${release}</span>\n                        <span class =\"rating\">IMDB:<br>${oneFilmCard.vote_average.toFixed(1)}</span>\n                      </p>\n                    </div>\n                  </a>\n              </li>`;\n    containerListWatchedCard.insertAdjacentHTML('beforeend', markup);\n  }\n}\n\n\nexport async function onCardQueue() {\n  containerListWatchedCard.innerHTML = '';\n  let markup = '';\n  for (const idFilm of dataQueueCards) {\n    const oneFilmCard = await getWatchedFilms(idFilm);\n    let release = Number.parseInt(oneFilmCard.release_date || oneFilmCard.first_air_date);\n    const mainPoster = `https://image.tmdb.org/t/p/w300${oneFilmCard.poster_path}`;\n    const posterFake = `https://shop-cdn1.vigbo.tech/shops/48947/products/18863233/images/2-be392e7cfe9a0fa843b29c1e22be8909.jpg`;\n    let genreMarkup = [];\n    oneFilmCard.genres.forEach(element => {\n      genreMarkup.push(element.name)\n    });\n    \n    markup += ` <li class =\"film-item\">\n              <a id='${oneFilmCard.id}' class=\"film-card\" href=\"#\">\n                <div class='thumb'>\n                <img\n                    class = 'poster'\n                    src= \"${oneFilmCard.poster_path ? mainPoster : posterFake}\"\n                    alt=\"${oneFilmCard.title}\"\n                    loading=\"lazy\"\n                  /></div>\n                  <div class='film-data'>\n                    <h2 class=\"title-film\">${oneFilmCard.title}</h2>\n                    <p>\n                      <span class='info-film'>${genreMarkup.join(', ')} | ${release}</span>\n                      <span class =\"rating\">IMDB:<br>${oneFilmCard.vote_average.toFixed(1)}</span>\n                    </p>\n                  </div>\n                </a>\n            </li>`;\n    containerListWatchedCard.insertAdjacentHTML('beforeend', markup);\n  }\n}\n// onCardQueue();\n\n\n\n","import { onCardWatch, onCardQueue } from \"./my-library\"\n\nconst queueBtn= document.querySelector('.secondary')\nconst watchedBtn= document.querySelector('.lib-btn.current')\nconst btnClearAll = document.querySelector('.btn-clear-all')\nconst mylibWrapper = document.querySelector('.film-list')\n\nwatchedBtn.addEventListener('click', onClickWatchedBtn)\nqueueBtn.addEventListener('click', onClickQueueBtn)\nbtnClearAll.addEventListener('click', onClickClearAll)\n\n\nexport function onClickWatchedBtn(){\n  if(watchedBtn.classList.contains('current')){return}\n  // mylibWrapper.innerHTML=''\n  queueBtn.classList.toggle('current')\n  watchedBtn.classList.toggle('current')\n  onCardWatch()\n}\n\n\nexport function onClickQueueBtn(){\n  if(queueBtn.classList.contains('current')){return}\n  mylibWrapper.innerHTML=''\n  queueBtn.classList.toggle('current')\n  watchedBtn.classList.toggle('current')\n}\n\n\nexport function onClickClearAll(){\n  if(watchedBtn.classList.contains('current')){\n    localStorage.removeItem('wathced')\n    mylibWrapper.innerHTML=''\n    location.replace(location.href)\n  return}\n  localStorage.removeItem('queue')\n  mylibWrapper.innerHTML=''\n  location.replace(location.href)\n}"],"names":["$bpxeT","parcelRequire","$7d854cd8b40ceb9e$var$queueBtn","document","querySelector","$7d854cd8b40ceb9e$var$watchedBtn","$7d854cd8b40ceb9e$var$btnClearAll","$7d854cd8b40ceb9e$var$mylibWrapper","addEventListener","classList","contains","toggle","$bb2af86579234925$export$b99bead8ac476cc4","innerHTML","localStorage","removeItem","location","replace","href","$bb2af86579234925$var$wraperMyLib","$bb2af86579234925$var$containerListWatchedCard","$bb2af86579234925$var$dataWatchedCards","JSON","parse","getItem","$bb2af86579234925$var$BASE_URL","$bb2af86579234925$var$API_KEY","$bb2af86579234925$var$getWatchedFilms","page","$bb2af86579234925$var$_getWatchedFilms","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","$dIxxU","default","get","concat","_ctx","sent","console","log","t0","$bb2af86579234925$var$_onCardWatch","markup","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","idFilm","oneFilmCard","release","mainPoster","genreMarkup","undefined","Symbol","iterator","next","done","value","Number","parseInt","release_date","first_air_date","poster_path","genres","forEach","element","push","name","id","title","join","vote_average","toFixed","insertAdjacentHTML","return","test","style","display","$bb2af86579234925$var$wraper"],"version":3,"file":"my-library.efefb08b.js.map"}